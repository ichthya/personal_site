facet_grid(PopEnv ~ .) +
theme(legend.position = "none", panel.spacing = unit(0.8, "lines")); a3
All_sub100 <- subset(All, REP == 1 & Alleles == 100 & SelectionCoef == 1e-3)
a4 <- ggplot(All_sub100, aes(Generation, Allele_freq,
color = PopEnv, group = interaction(PopEnv, Population))) +
geom_point()+
#geom_line(alpha = 0.8, size = 0.3) +
#scale_color_manual(name = "Selection coefficient",
#                   values = c("#92c5de","#f4a582", "gree")) +
#scale_linetype_manual(name = "Environment fitness", values = c("dashed", "solid")) +
labs(y = "Allele Frequency Environment") +
#scale_y_continuous(expand = c(0, 0), breaks = seq(1, 1.01, by = 0.0025), limits = c(1, 1.01)) +
#scale_x_continuous(breaks = c(200, 600, 1000), limits = c(100,1000)) +
scale_x_continuous(expand = c(0, 0)) +
theme_bw() +
facet_grid(PopEnv ~ .) +
theme(legend.position = "none", panel.spacing = unit(0.8, "lines")); a4
All_sub10 <- subset(All, REP == 1 & Alleles == 10)
a3 <- ggplot(All_sub10, aes(Generation, Allele_freq,
color = SelectionCoef, group = interaction(PopEnv, Population))) +
geom_point()+
#geom_line(alpha = 0.8, size = 0.3) +
scale_color_manual(name = "Selection coefficient",
values = c("#92c5de","#f4a582", "#abdda4")) +
scale_linetype_manual(name = "Environment fitness", values = c("dashed", "dotted")) +
labs(y = "Allele Frequency") +
scale_y_continuous(breaks = seq(0, 1, by = 0.25), limits = c(0, 1)) +
scale_x_continuous(breaks = c(1000,3000,5000), limits = c(1000,5000)) +
theme_bw() +
facet_grid(SelectionCoef ~ PopEnv) +
theme(legend.position = "right"); a
a3
a3 <- ggplot(All_sub10, aes(Generation, Allele_freq,
color = factor(SelectionCoef), group = interaction(PopEnv, Population))) +
geom_point()+
#geom_line(alpha = 0.8, size = 0.3) +
scale_color_manual(name = "Selection coefficient",
values = c("#92c5de","#f4a582", "#abdda4")) +
scale_linetype_manual(name = "Environment fitness", values = c("dashed", "dotted")) +
labs(y = "Allele Frequency") +
scale_y_continuous(breaks = seq(0, 1, by = 0.25), limits = c(0, 1)) +
scale_x_continuous(breaks = c(1000,3000,5000), limits = c(1000,5000)) +
theme_bw() +
facet_grid(SelectionCoef ~ PopEnv) +
theme(legend.position = "right"); a3
All_sub100 <- subset(All, REP == 1 & Alleles == 100 & SelectionCoef == 1e-3)
a4 <- ggplot(All_sub100, aes(Generation, Allele_freq,
color = PopEnv, group = interaction(PopEnv, Population))) +
geom_point()+
#geom_line(alpha = 0.8, size = 0.3) +
#scale_color_manual(name = "Selection coefficient",
#                   values = c("#92c5de","#f4a582", "gree")) +
#scale_linetype_manual(name = "Environment fitness", values = c("dashed", "solid")) +
labs(y = "Allele Frequency Environment") +
#scale_y_continuous(expand = c(0, 0), breaks = seq(1, 1.01, by = 0.0025), limits = c(1, 1.01)) +
#scale_x_continuous(breaks = c(200, 600, 1000), limits = c(100,1000)) +
scale_x_continuous(expand = c(0, 0)) +
theme_bw() +
facet_grid(PopEnv ~ .) +
theme(legend.position = "none", panel.spacing = unit(0.8, "lines")); a4
head(Fit)
for(i in Ff){
sce_temp <- strsplit(i, "_")[[1]][1]
temp_f <- read.table(paste(outF,i, sep=""), header = T, sep = " ")
s_temp <- as.numeric(sub("s", "", strsplit(i, "_")[[1]][grep("s[0-9]", strsplit(i, "_")[[1]])]))
A_temp <- as.numeric(sub("A", "", strsplit(i, "[[:punct:]]")[[1]][grep("A[0-9]", strsplit(i, "[[:punct:]]")[[1]])]))
temp_f$Scenario <- rep(sce_temp, length(temp_f$REP))
temp_f$Alleles <- rep(A_temp, length(temp_f$REP))
temp_f$SelectionCoef <- rep(s_temp, length(temp_f$REP))
Fit <- rbind(Fit, temp_f)
}
popsHEAD <- read.table("../01_LocalAdaptationInRivers_Scripts/01_Inputs_SLiM/River4_160km_disp200_headwaterADAPT_pops.txt", header = F)
outF <- "~/Dropbox/Postdoc_UBC/Project1_LocalAdaptationInRivers/01_Outputs_SLIM/"
f <- list.files(outF)
Ff <- f[grep("Fitness", f)]
Ff
Fit <- data.frame(Alleles = numeric(),
SelectionCoef = numeric(),
REP = numeric(),
Generation = numeric(),
Population = numeric(),
PopMeanFitness = numeric(),
PopSdFitness = numeric())
r
for(i in Ff){
sce_temp <- strsplit(i, "_")[[1]][1]
temp_f <- read.table(paste(outF,i, sep=""), header = T, sep = " ")
s_temp <- as.numeric(sub("s", "", strsplit(i, "_")[[1]][grep("s[0-9]", strsplit(i, "_")[[1]])]))
A_temp <- as.numeric(sub("A", "", strsplit(i, "[[:punct:]]")[[1]][grep("A[0-9]", strsplit(i, "[[:punct:]]")[[1]])]))
temp_f$Scenario <- rep(sce_temp, length(temp_f$REP))
temp_f$Alleles <- rep(A_temp, length(temp_f$REP))
temp_f$SelectionCoef <- rep(s_temp, length(temp_f$REP))
Fit <- rbind(Fit, temp_f)
}
Fit <- data.frame(Alleles = numeric(),
SelectionCoef = numeric(),
REP = numeric(),
Generation = numeric(),
Population = numeric(),
PopMeanFitness = numeric(),
PopSdFitness = numeric())
i <- Ff[1]
i
sce_temp <- strsplit(i, "_")[[1]][1]
sce_temp
temp_f <- read.table(paste(outF,i, sep=""), header = T, sep = " ")
paste(outF,i, sep=""
)
Ff
Af
Ff
grep("." Ff1)
grep("." Ff[1])
grep(".", Ff[1])
Ff[1]
grep(".txt", Ff)
Ff <- f[grep("Fitness", f)][grep(".txt", Ff)]
Ff
for(i in Ff){
sce_temp <- strsplit(i, "_")[[1]][1]
temp_f <- read.table(paste(outF,i, sep=""), header = T, sep = " ")
s_temp <- as.numeric(sub("s", "", strsplit(i, "_")[[1]][grep("s[0-9]", strsplit(i, "_")[[1]])]))
A_temp <- as.numeric(sub("A", "", strsplit(i, "[[:punct:]]")[[1]][grep("A[0-9]", strsplit(i, "[[:punct:]]")[[1]])]))
temp_f$Scenario <- rep(sce_temp, length(temp_f$REP))
temp_f$Alleles <- rep(A_temp, length(temp_f$REP))
temp_f$SelectionCoef <- rep(s_temp, length(temp_f$REP))
Fit <- rbind(Fit, temp_f)
}
Fit$PopEnv <- ifelse(Fit$Population %in% popsHEAD$V1, "Env2", "Env1")
Fit <- readRDS("~/Dropbox/Postdoc_UBC/Project1_LocalAdaptationInRivers/01_Outputs_SLIM/1_Fitness_COMB.rds")
head(Fit)
for(i in Ff){
sce_temp <- strsplit(i, "_")[[1]][1]
temp_f <- read.table(paste(outF,i, sep=""), header = T, sep = " ")
s_temp <- as.numeric(sub("s", "", strsplit(i, "_")[[1]][grep("s[0-9]", strsplit(i, "_")[[1]])]))
A_temp <- as.numeric(sub("A", "", strsplit(i, "[[:punct:]]")[[1]][grep("A[0-9]", strsplit(i, "[[:punct:]]")[[1]])]))
temp_f$Scenario <- rep(sce_temp, length(temp_f$REP))
temp_f$Alleles <- rep(A_temp, length(temp_f$REP))
temp_f$SelectionCoef <- rep(s_temp, length(temp_f$REP))
Fit <- rbind(Fit, temp_f)
}
Ff
for(i in Ff){
sce_temp <- strsplit(i, "_")[[1]][1]
temp_f <- read.table(paste(outF,i, sep=""), header = T, sep = " ")
s_temp <- as.numeric(sub("s", "", strsplit(i, "_")[[1]][grep("s[0-9]", strsplit(i, "_")[[1]])]))
A_temp <- as.numeric(sub("A", "", strsplit(i, "[[:punct:]]")[[1]][grep("A[0-9]", strsplit(i, "[[:punct:]]")[[1]])]))
temp_f$Scenario <- rep(sce_temp, length(temp_f$REP))
temp_f$Alleles <- rep(A_temp, length(temp_f$REP))
temp_f$SelectionCoef <- rep(s_temp, length(temp_f$REP))
Fit <- rbind(Fit, temp_f)
}
Fit <- data.frame(Alleles = numeric(),
SelectionCoef = numeric(),
REP = numeric(),
Generation = numeric(),
Population = numeric(),
PopMeanFitness = numeric(),
PopSdFitness = numeric())
for(i in Ff){
sce_temp <- strsplit(i, "_")[[1]][1]
temp_f <- read.table(paste(outF,i, sep=""), header = T, sep = " ")
s_temp <- as.numeric(sub("s", "", strsplit(i, "_")[[1]][grep("s[0-9]", strsplit(i, "_")[[1]])]))
A_temp <- as.numeric(sub("A", "", strsplit(i, "[[:punct:]]")[[1]][grep("A[0-9]", strsplit(i, "[[:punct:]]")[[1]])]))
temp_f$Scenario <- rep(sce_temp, length(temp_f$REP))
temp_f$Alleles <- rep(A_temp, length(temp_f$REP))
temp_f$SelectionCoef <- rep(s_temp, length(temp_f$REP))
Fit <- rbind(Fit, temp_f)
}
head(Fit)
Fit$PopEnv <- ifelse(Fit$Population %in% popsHEAD$V1, "Env2", "Env1")
head(Fit)
saveRDS(Fit, "1_Fitness_COMB.rds")
Fit_summ <- ddply(Fit, ~Generation+Population+PopEnv+Alleles+SelectionCoef, function(x){
mean = mean(x$Fitness)
sd = sd(x$Fitness)
sem = sd(x$Fitness)/sqrt(length(x$Fitness))
data.frame(mean = mean, sd = sd, sem = sem)
})
head(Fit_summ)
fit_summ$mean_cor <- ifelse(fit_summ$PopEnv == "Env1",
fit_summ$mean*(1+fit_summ$SelectionCoef), fit_summ$mean)
Fit_summ$mean_cor <- ifelse(Fit_summ$PopEnv == "Env1",
Fit_summ$mean*(1+Fit_summ$SelectionCoef), Fit_summ$mean)
head(Fit_summ)
Fit_summ$mean_cor <- ifelse(Fit_summ$PopEnv == "Env1",
Fit_summ$mean*(1+Fit_summ$SelectionCoef), Fit_summ$mean)
f <- ggplot(Fit_summ, aes(Generation, mean_cor, shape = factor(SelectionCoef),
colour = PopEnv, group = interaction(PopEnv,factor(SelectionCoef)))) +
#geom_errorbar(aes(ymin=mean-sem, ymax=mean+sem), width=.1, color="black")+
geom_line() +
#geom_point(size = 2, position = position_jitter(h = 0.00008, w=0)) +
scale_color_manual(name = "Selection coefficient",
values = c("#92c5de","#f4a582", "#abdda4")) +
#scale_linetype_manual(name = "Environment fitness", values = c("dashed", "solid")) +
labs(y = "Mean Fitness per Environment") +
#scale_y_continuous(breaks = seq(1.0, 1.01, 0.0025), limits = c(1.0,1.01)) +
scale_x_continuous(breaks = c(1001, 3000, 5000), limits = c(100,1000)) +
theme_bw() +
geom_hline(yintercept = 1.001, linetype = "dashed", color = "gray")+
geom_hline(yintercept = 1.01, linetype = "dashed", color = "gray")+
facet_grid(~ env_f, labeller = as_labeller(c("H" = "Altitudinal", "L"="Lateral", "P"="Patchy"))) +
theme(legend.position = "none"); f
f <- ggplot(Fit_summ, aes(Generation, mean_cor, shape = factor(SelectionCoef),
colour = PopEnv, group = interaction(PopEnv,factor(SelectionCoef)))) +
#geom_errorbar(aes(ymin=mean-sem, ymax=mean+sem), width=.1, color="black")+
geom_line() +
#geom_point(size = 2, position = position_jitter(h = 0.00008, w=0)) +
scale_color_manual(name = "Selection coefficient",
values = c("#92c5de","#f4a582", "#abdda4")) +
#scale_linetype_manual(name = "Environment fitness", values = c("dashed", "solid")) +
labs(y = "Mean Fitness per Environment") +
#scale_y_continuous(breaks = seq(1.0, 1.01, 0.0025), limits = c(1.0,1.01)) +
scale_x_continuous(breaks = c(1001, 3000, 5000), limits = c(100,1000)) +
theme_bw() +
geom_hline(yintercept = 1.001, linetype = "dashed", color = "gray")+
geom_hline(yintercept = 1.01, linetype = "dashed", color = "gray")+
facet_grid(~ PopEnv) +
theme(legend.position = "none"); f
f <- ggplot(Fit_summ, aes(Generation, mean_cor, shape = factor(SelectionCoef),
colour = PopEnv, group = interaction(Population,factor(SelectionCoef)))) +
#geom_errorbar(aes(ymin=mean-sem, ymax=mean+sem), width=.1, color="black")+
geom_line() +
#geom_point(size = 2, position = position_jitter(h = 0.00008, w=0)) +
scale_color_manual(name = "Selection coefficient",
values = c("#92c5de","#f4a582", "#abdda4")) +
#scale_linetype_manual(name = "Environment fitness", values = c("dashed", "solid")) +
labs(y = "Mean Fitness per Environment") +
#scale_y_continuous(breaks = seq(1.0, 1.01, 0.0025), limits = c(1.0,1.01)) +
scale_x_continuous(breaks = c(1001, 3000, 5000), limits = c(100,1000)) +
theme_bw() +
geom_hline(yintercept = 1.001, linetype = "dashed", color = "gray")+
geom_hline(yintercept = 1.01, linetype = "dashed", color = "gray")+
facet_grid(~ PopEnv) +
theme(legend.position = "right"); f
f <- ggplot(Fit_summ, aes(Generation, mean_cor, shape = factor(SelectionCoef),
colour = SelectionCoef, group = interaction(Population,factor(SelectionCoef)))) +
#geom_errorbar(aes(ymin=mean-sem, ymax=mean+sem), width=.1, color="black")+
geom_line() +
#geom_point(size = 2, position = position_jitter(h = 0.00008, w=0)) +
scale_color_manual(name = "Selection coefficient",
values = c("#92c5de","#f4a582", "#abdda4")) +
#scale_linetype_manual(name = "Environment fitness", values = c("dashed", "solid")) +
labs(y = "Mean Fitness per Environment") +
#scale_y_continuous(breaks = seq(1.0, 1.01, 0.0025), limits = c(1.0,1.01)) +
scale_x_continuous(breaks = c(1001, 3000, 5000), limits = c(100,1000)) +
theme_bw() +
geom_hline(yintercept = 1.001, linetype = "dashed", color = "gray")+
geom_hline(yintercept = 1.01, linetype = "dashed", color = "gray")+
facet_grid(~ PopEnv) +
theme(legend.position = "right"); f
f <- ggplot(Fit_summ, aes(Generation, mean_cor, shape = factor(SelectionCoef),
colour = factor(SelectionCoef), group = interaction(Population,factor(SelectionCoef)))) +
#geom_errorbar(aes(ymin=mean-sem, ymax=mean+sem), width=.1, color="black")+
geom_line() +
#geom_point(size = 2, position = position_jitter(h = 0.00008, w=0)) +
scale_color_manual(name = "Selection coefficient",
values = c("#92c5de","#f4a582", "#abdda4")) +
#scale_linetype_manual(name = "Environment fitness", values = c("dashed", "solid")) +
labs(y = "Mean Fitness per Environment") +
#scale_y_continuous(breaks = seq(1.0, 1.01, 0.0025), limits = c(1.0,1.01)) +
scale_x_continuous(breaks = c(1001, 3000, 5000), limits = c(100,1000)) +
theme_bw() +
geom_hline(yintercept = 1.001, linetype = "dashed", color = "gray")+
geom_hline(yintercept = 1.01, linetype = "dashed", color = "gray")+
facet_grid(~ PopEnv) +
theme(legend.position = "right"); f
f <- ggplot(Fit_summ, aes(Generation, mean_cor, shape = factor(SelectionCoef),
colour = factor(SelectionCoef), group = interaction(Population,PopEnv))) +
#geom_errorbar(aes(ymin=mean-sem, ymax=mean+sem), width=.1, color="black")+
geom_line() +
#geom_point(size = 2, position = position_jitter(h = 0.00008, w=0)) +
scale_color_manual(name = "Selection coefficient",
values = c("#92c5de","#f4a582", "#abdda4")) +
#scale_linetype_manual(name = "Environment fitness", values = c("dashed", "solid")) +
labs(y = "Mean Fitness per Environment") +
#scale_y_continuous(breaks = seq(1.0, 1.01, 0.0025), limits = c(1.0,1.01)) +
scale_x_continuous(breaks = c(1001, 3000, 5000), limits = c(100,1000)) +
theme_bw() +
geom_hline(yintercept = 1.001, linetype = "dashed", color = "gray")+
geom_hline(yintercept = 1.01, linetype = "dashed", color = "gray")+
facet_grid(~ PopEnv) +
theme(legend.position = "right"); f
f <- ggplot(Fit_summ, aes(Generation, mea_cor, colour = factor(SelectionCoef),
group = interaction(Population, factor(SelectionCoef)))) +
#geom_errorbar(aes(ymin=mean-sem, ymax=mean+sem), width=.1, color="black")+
geom_line(alpha = 0.5) +
#geom_point(size = 2, shape=21, fill="white") +
scale_color_manual(name = "Selection coefficient",
values = c("#92c5de","#f4a582", "#abdda4")) +
#scale_linetype_manual(name = "Environment fitness", values = c("dashed", "dotted")) +
labs(y = "Mean Fitness") +
#scale_y_continuous(breaks = seq(0, 1, by = 0.25), limits = c(0, 1)) +
scale_x_continuous(breaks = c(1000,3000,5000), limits = c(1000,5000)) +
theme_bw() +
facet_grid(Alleles ~ PopEnv) +
theme(legend.position = "right"); f
f <- ggplot(Fit_summ, aes(Generation, mean_cor, colour = factor(SelectionCoef),
group = interaction(Population, factor(SelectionCoef)))) +
#geom_errorbar(aes(ymin=mean-sem, ymax=mean+sem), width=.1, color="black")+
geom_line(alpha = 0.5) +
#geom_point(size = 2, shape=21, fill="white") +
scale_color_manual(name = "Selection coefficient",
values = c("#92c5de","#f4a582", "#abdda4")) +
#scale_linetype_manual(name = "Environment fitness", values = c("dashed", "dotted")) +
labs(y = "Mean Fitness") +
#scale_y_continuous(breaks = seq(0, 1, by = 0.25), limits = c(0, 1)) +
scale_x_continuous(breaks = c(1000,3000,5000), limits = c(1000,5000)) +
theme_bw() +
facet_grid(Alleles ~ PopEnv) +
theme(legend.position = "right"); f
head(Fit)
View(Fit_summ)
f <- ggplot(fit_summENV, aes(Generation, mean, shape = factor(sel),
colour = PopA, group = interaction(PopA,factor(sel)))) +
#geom_errorbar(aes(ymin=mean-sem, ymax=mean+sem), width=.1, color="black")+
geom_line() +
geom_point(size = 2, position = position_jitter(h = 0.00008, w=0)) +
scale_color_manual(name = "Selection coefficient",
values = c("#92c5de","#f4a582")) +
#scale_linetype_manual(name = "Environment fitness", values = c("dashed", "solid")) +
labs(y = "Mean Fitness per Environment") +
#scale_y_continuous(breaks = seq(1.0, 1.01, 0.0025), limits = c(1.0,1.01)) +
scale_x_continuous(breaks = c(200, 600, 1000), limits = c(100,1000)) +
theme_bw() +
geom_hline(yintercept = 1.001, linetype = "dashed", color = "gray")+
geom_hline(yintercept = 1.01, linetype = "dashed", color = "gray")+
facet_grid(~ env_f, labeller = as_labeller(c("H" = "Altitudinal", "L"="Lateral", "P"="Patchy"))) +
theme(legend.position = "none"); f
fp <- ggplot(fit_summPOP, aes(Generation, mean,
colour = PopA, group = interaction(PopA,factor(Population)))) +
#geom_errorbar(aes(ymin=mean-sem, ymax=mean+sem), width=.1, color="black")+
geom_line(alpha = 0.8, size = 0.3) +
#geom_point(size = 2) +
scale_color_manual(name = "Selection coefficient",
values = c("#92c5de","#f4a582")) +
#scale_linetype_manual(name = "Environment fitness", values = c("dashed", "solid")) +
labs(y = "Mean Fitness per Environment") +
#scale_y_continuous(breaks = seq(1.0, 1.01, 0.0025), limits = c(1.0,1.01)) +
scale_x_continuous(breaks = c(200, 600, 1000), limits = c(100,1000)) +
theme_bw() +
facet_grid(factor(sel) ~ env_f, scales = "free_y", labeller = as_labeller(c("H" = "Altitudinal", "L"="Lateral", "P"="Patchy",
"0"="s = 0", "0.001" = "s = 0.001", "0.01" = "s = 0.01"))) +
theme(legend.position = "none"); fp
f <- ggplot(Fit_summ, aes(Generation, mean, colour = factor(SelectionCoef),
group = interaction(Population, factor(SelectionCoef)))) +
#geom_errorbar(aes(ymin=mean-sem, ymax=mean+sem), width=.1, color="black")+
geom_line(alpha = 0.5) +
#geom_point(size = 2, shape=21, fill="white") +
scale_color_manual(name = "Selection coefficient",
values = c("#92c5de","#f4a582", "#abdda4")) +
#scale_linetype_manual(name = "Environment fitness", values = c("dashed", "dotted")) +
labs(y = "Mean Fitness") +
#scale_y_continuous(breaks = seq(0, 1, by = 0.25), limits = c(0, 1)) +
scale_x_continuous(breaks = c(1000,3000,5000), limits = c(1000,5000)) +
theme_bw() +
facet_grid(Alleles ~ PopEnv) +
theme(legend.position = "right"); f
Fit_summ$mean_cor <- ifelse(Fit_summ$PopEnv == "Env1" & Fit_summ$PopEnv == 10,
Fit_summ$mean*(10+Fit_summ$SelectionCoef), Fit_summ$mean)
Fit_summ$mean_cor <- Fit_summ$mean
Fit_summ$mean_cor <- Fit_summ$mean
Fit_summ$mean_cor <- if(Fit_summ$PopEnv == "Env1" & Fit_summ$PopEnv == 10){
Fit_summ$mean*(10+Fit_summ$SelectionCoef)}
Fit_summ$mean_cor <- ifelse(Fit_summ$PopEnv == "Env1" & Fit_summ$PopEnv == 10 |
Fit_summ$PopEnv == "Env1" & Fit_summ$PopEnv == 100,
Fit_summ$mean*(Fit_summ$Alleles+Fit_summ$SelectionCoef), Fit_summ$mean)
f <- ggplot(Fit_summ, aes(Generation, mean, colour = factor(SelectionCoef),
group = interaction(Population, factor(SelectionCoef)))) +
#geom_errorbar(aes(ymin=mean-sem, ymax=mean+sem), width=.1, color="black")+
geom_line(alpha = 0.5) +
#geom_point(size = 2, shape=21, fill="white") +
scale_color_manual(name = "Selection coefficient",
values = c("#92c5de","#f4a582", "#abdda4")) +
#scale_linetype_manual(name = "Environment fitness", values = c("dashed", "dotted")) +
labs(y = "Mean Fitness") +
#scale_y_continuous(breaks = seq(0, 1, by = 0.25), limits = c(0, 1)) +
scale_x_continuous(breaks = c(1000,3000,5000), limits = c(1000,5000)) +
theme_bw() +
facet_grid(Alleles ~ PopEnv) +
theme(legend.position = "right"); f
f <- ggplot(Fit_summ, aes(Generation, mean_cor, colour = factor(SelectionCoef),
group = interaction(Population, factor(SelectionCoef)))) +
#geom_errorbar(aes(ymin=mean-sem, ymax=mean+sem), width=.1, color="black")+
geom_line(alpha = 0.5) +
#geom_point(size = 2, shape=21, fill="white") +
scale_color_manual(name = "Selection coefficient",
values = c("#92c5de","#f4a582", "#abdda4")) +
#scale_linetype_manual(name = "Environment fitness", values = c("dashed", "dotted")) +
labs(y = "Mean Fitness") +
#scale_y_continuous(breaks = seq(0, 1, by = 0.25), limits = c(0, 1)) +
scale_x_continuous(breaks = c(1000,3000,5000), limits = c(1000,5000)) +
theme_bw() +
facet_grid(Alleles ~ PopEnv) +
theme(legend.position = "right"); f
0.93*(10)
0.93*(10+0.001)
0.93*(1+0.001)
0.99999*(10+0.0001)
max(Fit_summ$mean)
f <- ggplot(Fit_summ, aes(Generation, mean, colour = factor(SelectionCoef),
group = interaction(Population, factor(SelectionCoef)))) +
#geom_errorbar(aes(ymin=mean-sem, ymax=mean+sem), width=.1, color="black")+
geom_line(alpha = 0.5) +
#geom_point(size = 2, shape=21, fill="white") +
scale_color_manual(name = "Selection coefficient",
values = c("#92c5de","#f4a582", "#abdda4")) +
#scale_linetype_manual(name = "Environment fitness", values = c("dashed", "dotted")) +
labs(y = "Mean Fitness") +
#scale_y_continuous(breaks = seq(0, 1, by = 0.25), limits = c(0, 1)) +
scale_x_continuous(breaks = c(1000,3000,5000), limits = c(1000,5000)) +
theme_bw() +
facet_grid(Alleles ~ PopEnv) +
theme(legend.position = "right"); f
sample(seq(0, 4e8-1,1)
,10)
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
#Set our working directory
setwd("~/Dropbox/website/personal_site/")
#render site
rmarkdown::render_site()
